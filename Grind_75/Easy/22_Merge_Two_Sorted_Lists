# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        cur = dummy = ListNode()
        
        # cur is being used as an extra node
        # cur will not be well defined until cur.next
        # which is why dummy.next is returned

        while list1 and list2: 
            # using a snake like pattern of jumping between lists. 
            if list1.val < list2.val: 
                cur.next = list1
                cur = cur.next
                list1 = list1.next
            else: 
                cur.next = list2
                cur = cur.next
                list2 = list2.next
                
        if list1 or list2: 
            cur.next = list1 if list1 else list2
        return dummy.next